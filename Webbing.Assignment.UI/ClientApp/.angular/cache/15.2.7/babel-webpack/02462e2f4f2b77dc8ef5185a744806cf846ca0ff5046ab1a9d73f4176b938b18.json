{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/usage.service\";\nimport * as i3 from \"@angular/common\";\nfunction UsageDataComponent_table_8_tr_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const usageItem_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", usageItem_r2.simId, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(usageItem_r2.totalUsage);\n  }\n}\nfunction UsageDataComponent_table_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"SimId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Total Usage\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"tbody\");\n    i0.ɵɵtemplate(8, UsageDataComponent_table_8_tr_8_Template, 5, 2, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.usageBySim);\n  }\n}\nexport class UsageDataComponent {\n  constructor(route, usageService) {\n    this.route = route;\n    this.usageService = usageService;\n    this.usageBySim = [];\n    this.fromDate = new Date(2023, 1, 1);\n    this.toDate = new Date(2025, 1, 1);\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.customerId = params['id'];\n      this.usageService.getUsagesGroupBySim(this.customerId, this.fromDate, this.toDate).subscribe(data => {\n        this.usageBySim = data;\n      });\n    });\n  }\n}\nUsageDataComponent.ɵfac = function UsageDataComponent_Factory(t) {\n  return new (t || UsageDataComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UsageService));\n};\nUsageDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UsageDataComponent,\n  selectors: [[\"app-usage-data\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [1, \"text-sm\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function UsageDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Usage Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching usage data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h2\");\n      i0.ɵɵtext(5, \"CustomerId: \");\n      i0.ɵɵelementStart(6, \"small\", 1);\n      i0.ɵɵtext(7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, UsageDataComponent_table_8_Template, 9, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵtextInterpolate(ctx.customerId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.usageBySim.length > 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAYIA,0BAAyC;IACnCA,YAAoB;IAAAA,iBAAK;IAC7BA,0BAAI;IAAAA,YAAwB;IAAAA,iBAAK;;;;IAD7BA,eAAoB;IAApBA,kDAAoB;IACpBA,eAAwB;IAAxBA,6CAAwB;;;;;IAVlCA,gCAA8F;IAGpFA,qBAAK;IAAAA,iBAAK;IACdA,0BAAI;IAAAA,2BAAW;IAAAA,iBAAK;IAGxBA,6BAAO;IACLA,yEAGK;IACPA,iBAAQ;;;;IAJoBA,eAAa;IAAbA,2CAAa;;;ACH3C,OAAM,MAAOC,kBAAkB;EAM7BC,YACUC,KAAqB,EACZC,YAA0B;IADnC,UAAK,GAALD,KAAK;IACI,iBAAY,GAAZC,YAAY;IAP/B,eAAU,GAAoB,EAAE;IAEhC,aAAQ,GAAS,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,WAAM,GAAS,IAAIA,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAIc;EAEjDC,QAAQ;IACN,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,UAAU,GAAGF,MAAM,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACH,YAAY,CAACM,mBAAmB,CAAC,IAAI,CAACD,UAAU,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC,CAC/EJ,SAAS,CAACK,IAAI,IAAG;QAChB,IAAI,CAACC,UAAU,GAAGD,IAAI;MACxB,CAAC,CAAC;IACN,CAAC,CAAC;EAEJ;;AAnBWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDT/BnB,6BAAoB;MAAAA,0BAAU;MAAAA,iBAAK;MACnCA,yBAAG;MAAAA,gFAAgE;MAAAA,iBAAI;MAEvEA,0BAAI;MAAAA,4BAAY;MAAAA,gCAAuB;MAAAA,YAAc;MAAAA,iBAAQ;MAC7DA,uEAaQ;;;MAd+BA,eAAc;MAAdA,oCAAc;MACYA,eAA2B;MAA3BA,gDAA2B","names":["i0","UsageDataComponent","constructor","route","usageService","Date","ngOnInit","params","subscribe","customerId","getUsagesGroupBySim","fromDate","toDate","data","usageBySim","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Avi\\source\\repos\\AviNessimian\\Avi Nessimian-Software Engineer assignment\\Webbing.Assignment.UI\\ClientApp\\src\\app\\fetch-data\\usage-data.component.html","C:\\Users\\Avi\\source\\repos\\AviNessimian\\Avi Nessimian-Software Engineer assignment\\Webbing.Assignment.UI\\ClientApp\\src\\app\\fetch-data\\usage-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Usage Data</h1>\r\n<p>This component demonstrates fetching usage data from the server.</p>\r\n\r\n<h2>CustomerId: <small class=\"text-sm\">{{customerId}}</small></h2>\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"usageBySim.length > 0\">\r\n  <thead>\r\n    <tr>\r\n      <th>SimId</th>\r\n      <th>Total Usage</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let usageItem of usageBySim\">\r\n      <td>{{usageItem.simId}} </td>\r\n      <td>{{usageItem.totalUsage}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject, Input } from '@angular/core';\r\nimport { UsageBySimDTO } from '../models/Usage';\r\nimport { UsageService } from '../services/usage.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-usage-data',\r\n  templateUrl: './usage-data.component.html'\r\n})\r\nexport class UsageDataComponent {\r\n  usageBySim: UsageBySimDTO[] = [];\r\n  customerId!: string;\r\n  fromDate: Date = new Date(2023, 1, 1);\r\n  toDate: Date = new Date(2025, 1, 1);\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private readonly usageService: UsageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.customerId = params['id'];\r\n      this.usageService.getUsagesGroupBySim(this.customerId, this.fromDate, this.toDate)\r\n        .subscribe(data => {\r\n          this.usageBySim = data;\r\n        });\r\n    });\r\n\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}