{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/usage.service\";\nimport * as i2 from \"../summary/summary.component\";\nexport class HomeComponent {\n  constructor(usageService) {\n    this.usageService = usageService;\n    this.usageByCustomer = [];\n    this.topCustomers = [];\n    this.simsCount = 0;\n    this.totalUsage = 0;\n    this.fromDate = new Date(2023, 1, 1);\n    this.toDate = new Date(2025, 1, 1);\n  }\n  ngOnInit() {\n    this.usageService.getUsagesGroupByCustomer(this.fromDate, this.toDate).subscribe(data => {\n      let sum = 0;\n      let totalUsage = 0;\n      data.forEach(el => {\n        sum += el.simCount;\n        totalUsage += el.totalUsage;\n      });\n      this.simsCount = sum;\n      this.totalUsage = totalUsage;\n      this.usageByCustomer = data;\n      this.topCustomers = data.sort((a, b) => b.value - a.value).slice(0, 2);\n    });\n  }\n  onTopCustomerClick(customer) {\n    // const customerId = \"\";\n    // this.usageService.getUsagesGroupBySim(customerId, fromDate, toDate)\n    //   .subscribe(\n    //     data => {\n    //       // Handle grouped data by SIM\n    //       this.usages = data;\n    //     },\n    //     error => {\n    //       this.error = error.message; // Handle the error (optional)\n    //     }\n    //   );\n    alert('onTopCustomerClick');\n  }\n  onRefresh() {\n    alert('onRefresh');\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.UsageService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"mt-3\", \"mb-3\"], [1, \"fst-italic\", \"text-muted\"], [3, \"simsCount\", \"totalUsage\", \"topCustomerClick\", \"refresh\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Summary\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"p\", 1);\n      i0.ɵɵtext(4, \"Show summary here...\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"app-summary\", 2);\n      i0.ɵɵlistener(\"topCustomerClick\", function HomeComponent_Template_app_summary_topCustomerClick_5_listener($event) {\n        return ctx.onTopCustomerClick($event);\n      })(\"refresh\", function HomeComponent_Template_app_summary_refresh_5_listener() {\n        return ctx.onRefresh();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"simsCount\", ctx.simsCount)(\"totalUsage\", ctx.totalUsage);\n    }\n  },\n  dependencies: [i2.SummaryComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,aAAa;EASxBC,YAA6BC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IARzC,oBAAe,GAAyB,EAAE;IAC1C,iBAAY,GAAyB,EAAE;IACvC,cAAS,GAAW,CAAC;IACrB,eAAU,GAAW,CAAC;IAEtB,aAAQ,GAAS,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,WAAM,GAAS,IAAIA,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAEwB;EAE3DC,QAAQ;IACN,IAAI,CAACF,YAAY,CAACG,wBAAwB,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC,CACnEC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAIC,GAAG,GAAG,CAAC;MACX,IAAIC,UAAU,GAAG,CAAC;MAElBF,IAAI,CAACG,OAAO,CAAEC,EAAE,IAAI;QAClBH,GAAG,IAAIG,EAAE,CAACC,QAAQ;QAClBH,UAAU,IAAIE,EAAE,CAACF,UAAU;MAC7B,CAAC,CAAC;MAEF,IAAI,CAACI,SAAS,GAAGL,GAAG;MACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;MAC5B,IAAI,CAACK,eAAe,GAAGP,IAAI;MAC3B,IAAI,CAACQ,YAAY,GAAGR,IAAI,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAAGF,CAAC,CAACE,KAAK,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,CAAC;EACN;EAEAC,kBAAkB,CAACC,QAA4B;IAC7C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,CAAC,oBAAoB,CAAC;EAC7B;EAEAC,SAAS;IACPD,KAAK,CAAC,WAAW,CAAC;EACpB;;AA9CWzB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAA2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCT1BC,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAChBA,8BAAuB;MACYA,oCAAoB;MAAAA,iBAAI;MAEzDA,sCAGqC;MADxBA;QAAA,OAAoBC,8BAA0B;MAAA,EAAC;QAAA,OACpCA,eAAW;MAAA,EADyB;MACvBD,iBAAc;;;MAHtCA,eAAuB;MAAvBA,yCAAuB","names":["HomeComponent","constructor","usageService","Date","ngOnInit","getUsagesGroupByCustomer","fromDate","toDate","subscribe","data","sum","totalUsage","forEach","el","simCount","simsCount","usageByCustomer","topCustomers","sort","a","b","value","slice","onTopCustomerClick","customer","alert","onRefresh","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Avi\\source\\repos\\AviNessimian\\Avi Nessimian-Software Engineer assignment\\Webbing.Assignment.UI\\ClientApp\\src\\app\\home\\home.component.ts","C:\\Users\\Avi\\source\\repos\\AviNessimian\\Avi Nessimian-Software Engineer assignment\\Webbing.Assignment.UI\\ClientApp\\src\\app\\home\\home.component.html"],"sourcesContent":["import { OnInit } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { UsageService } from '../services/usage.service';\r\nimport { UsageByCustomerDTO } from '../models/Usage';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  usageByCustomer: UsageByCustomerDTO[] = [];\r\n  topCustomers: UsageByCustomerDTO[] = [];\r\n  simsCount: number = 0;\r\n  totalUsage: number = 0;\r\n\r\n  fromDate: Date = new Date(2023, 1, 1);\r\n  toDate: Date = new Date(2025, 1, 1);\r\n\r\n  constructor(private readonly usageService: UsageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.usageService.getUsagesGroupByCustomer(this.fromDate, this.toDate)\r\n      .subscribe(data => {\r\n        let sum = 0;\r\n        let totalUsage = 0;\r\n\r\n        data.forEach((el) => {\r\n          sum += el.simCount;\r\n          totalUsage += el.totalUsage;\r\n        });\r\n\r\n        this.simsCount = sum;\r\n        this.totalUsage = totalUsage;\r\n        this.usageByCustomer = data;\r\n        this.topCustomers = data.sort((a, b) => b.value - a.value).slice(0, 2);\r\n      });\r\n  }\r\n\r\n  onTopCustomerClick(customer: UsageByCustomerDTO) {\r\n    // const customerId = \"\";\r\n    // this.usageService.getUsagesGroupBySim(customerId, fromDate, toDate)\r\n    //   .subscribe(\r\n    //     data => {\r\n    //       // Handle grouped data by SIM\r\n    //       this.usages = data;\r\n    //     },\r\n    //     error => {\r\n    //       this.error = error.message; // Handle the error (optional)\r\n    //     }\r\n    //   );\r\n    alert('onTopCustomerClick');\r\n  }\r\n\r\n  onRefresh() {\r\n    alert('onRefresh');\r\n  }\r\n}\r\n","<h1>Summary</h1>\r\n<div class=\"mt-3 mb-3\">\r\n  <p class=\"fst-italic text-muted\">Show summary here...</p>\r\n\r\n  <app-summary [simsCount]=\"simsCount\"\r\n               [totalUsage]=\"totalUsage\"\r\n               (topCustomerClick)=\"onTopCustomerClick($event)\" \r\n               (refresh)=\"onRefresh()\"></app-summary>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}